
//==========================================
// simple programm demonstrating the use of 
// external interrupts on the UNO
//==========================================

//assign pins 
//note: only two external 
//interrupt pins on the UNO
//they are pins 2 & 3
const int LDR_PIN = 2;
const int PIR_PIN = 3;
const int LDR_LED = 12;
const int PIR_LED = 11;
	
//state variables
volatile bool pir_state = LOW;
volatile bool ldr_state = HIGH;

//LDR interrupt routine
void ldr_interrupt(){
  if(digitalRead(LDR_PIN)){ 
    digitalWrite(LDR_LED, HIGH);
    ldr_state = HIGH;
  }
  else {
    digitalWrite(LDR_LED, LOW);
  	ldr_state = LOW;
  }
}

//PIR interrupt routine
void pir_interrupt(){
  pir_state = !pir_state;
  digitalWrite(PIR_LED, pir_state);
}

//configure
void setup()
{
  //designate pin roles
  pinMode(LDR_PIN, INPUT);
  pinMode(PIR_PIN, INPUT);
  pinMode(LDR_LED, OUTPUT);
  pinMode(PIR_LED, OUTPUT);
  //simulate a dark environment to start
  digitalWrite(LDR_PIN, HIGH);
  //setup interrupt pins and ISR
  attachInterrupt(digitalPinToInterrupt(LDR_PIN), ldr_interrupt, CHANGE);
  attachInterrupt(digitalPinToInterrupt(PIR_PIN), pir_interrupt, CHANGE);
  //create serial object and initialise baud rate
  Serial.begin(9600);
}

void simulated_long_process(){
  //read output/state
  Serial.print("ldr state: ");
  Serial.print(ldr_state);
  Serial.print(" pir state: ");
  Serial.println(pir_state);
  //delay(200);   
}

void loop()
{ 
  simulated_long_process();
}
